// Code generated by MockGen. DO NOT EDIT.
// Source: internal/http-server/handlers/url/save/save.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUrlSaver is a mock of UrlSaver interface.
type MockUrlSaver struct {
	ctrl     *gomock.Controller
	recorder *MockUrlSaverMockRecorder
}

// MockUrlSaverMockRecorder is the mock recorder for MockUrlSaver.
type MockUrlSaverMockRecorder struct {
	mock *MockUrlSaver
}

// NewMockUrlSaver creates a new mock instance.
func NewMockUrlSaver(ctrl *gomock.Controller) *MockUrlSaver {
	mock := &MockUrlSaver{ctrl: ctrl}
	mock.recorder = &MockUrlSaverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUrlSaver) EXPECT() *MockUrlSaverMockRecorder {
	return m.recorder
}

// SaveUrl mocks base method.
func (m *MockUrlSaver) SaveUrl(urlToSave, alias string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveUrl", urlToSave, alias)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveUrl indicates an expected call of SaveUrl.
func (mr *MockUrlSaverMockRecorder) SaveUrl(urlToSave, alias interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveUrl", reflect.TypeOf((*MockUrlSaver)(nil).SaveUrl), urlToSave, alias)
}
